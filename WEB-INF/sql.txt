

create database smadb;

use smadb;

create table users(
    user_id int primary key auto_increment,
    username char(30) not null unique,
    password char(255) not null,
    email char(255) not null unique,
    mobile char(10) not null unique,
    verification_code char(255),
    status_id int not null default 2,
    profile_pic_path char(255) unique,
    background_pic_path char(255) unique,
    about varchar(1000),
    dob date,
    gender char(1),
    address varchar(500),
    profession char(50),
    linkedin char(255),
    instagram char(255),
    youtube char(255),
    github char(255),
    city_id int,
    constraint users_status_fk foreign key (status_id) references status(status_id),
    constraint users_city_fk foreign key (city_id) references cities(city_id)
);

alter table users modify column status_id int not null default 2,
add constraint fk_users_status foreign key (status_id) references status (status_id); 

alter table users modify column dob date;
alter table users modify column gender char(1);
alter table users modify column city_id int;

update users u set follower_count =(select count(*) from followers i where i.following_id=u.user_id);

create table status(
    status_id int primary key auto_increment,
    type char(30) not null unique
);
/*************************************states countries cities*********************************************/
create table countries(
    country_id int primary key auto_increment,
    name char(50) not null unique
);

create table states(
    state_id int primary key auto_increment,
    country_id int not null,
    name char(50) not null,
    constraint states_country_fk foreign key (country_id) references countries(country_id)
);

create table cities(
    city_id int primary key auto_increment,
    state_id int not null,
    name char(50) not null,
    constraint cities_state_fk foreign key (state_id) references states(state_id)
);

insert into status (type) values ('active'), ('inactive'), ('blocked'), ('closed'), ('accepted'), ('pending'), ('rejected');

insert into countries(name) values('Afghanistan'),('Bangladesh'),('Germany'),('India');

insert into states(name,country_id)
values 
('BadaKhslan', 1),('Badghis', 1),('Baghlan', 1),('Balkh', 1),
('Chittagong', 2),('Khulna', 2),('Barisa', 2),('Dhaka', 2),
('Bavaria', 3),('Berlin', 3),('Brandenburg', 3),('Breman', 3),
('Madhya Pradesh', 4),('Gujrat', 4),('Uttar Pradesh', 4),('Maharashtra', 4);


insert into cities(name,state_id)
values
('Jabalpur', 1), ('Bhopal', 1), ('Gwalior', 1), ('Indore', 1), 
('Ahmedabad', 2), ('Surat', 2), ('Bhuj', 2), ('Gandhinagar', 2), 
('Kanpur', 3), ('Laknow', 3), ('Prayagraj', 3), ('Varansi', 3), 
('Nagpur', 4), ('Pune', 4), ('Nasik', 4), ('Mumbai', 4); 

select c.city_id,c.name,s.name from cities as c inner join states as s where c.city_id=s.state_id";
/*********************************institutes courses educations**************************************/
create table institutes (
    institute_id int primary key auto_increment,
    name char(60) not null unique
);


create table courses (
    course_id int primary key auto_increment,
    name char(50) not null unique
);


create table educations (
    education_id int primary key auto_increment,
    user_id int not null,
    institute_id int not null,
    course_id int not null,
    city_id int not null,
    batch int,
     constraint edu_user_fk foreign key (user_id) references users(user_id),
    constraint edu_ins_fk foreign key (institute_id) references institutes(institute_id),
    constraint edu_course_fk foreign key (course_id) references courses(course_id),
    constraint edu_city_fk foreign key (city_id) references cities(city_id)
);

insert into institutes (name) values ('Indian Institute Of Technology Delhi (IIT Delhi)'),('Jawaharlal Nehru University'),('Bansal Institute of Research Technology & Science, Bhopal'),
('Calcutta University'),('Harvard University'),('Indian Statistical Institute'),('Massachusetts Institute of Technology'),('Stanford University'),('Tata Institute Of Fundamental Research'),
('University of Cambridge'),('University of Oxford'),('Banaras Hindu University'),('University of Hyderabad'),('Manipal Academy of Higher Education');

insert into courses (name) values ('Diploma in Hotel Management'),('Diploma in Engineering'),('Diploma in Fashion Designing'),('Diploma in IT'),
('Diploma in Journalism'),('Diploma in Event Management'),('Diploma in Dental Mechanics'),('Diploma in healthcare'),('Diploma in stenography'),
('Diploma in Web Designing'),('Engineering'),('Diploma in Animation and Multimedia'),('Arts and Humanities'),('Automobile'),
('Bachelor of Computer applications'),('Diploma in Mechanical Engineering'),('Nursing'),('Agriculture Engineering'),('Computer Science'),
('Web designing course'),('Cloud computing'),('Data Science'),('Web designing'),('Programming'),('Artificial intelligence'),('Cybersecurity'),('Digital marketing'),('Graphic design');


select i.institute_id,i.name,t.course_id,t.name,c.city_id,c.name,batch from educations as e inner join cities as c inner join institutes as i inner join courses as t on e.city_id = c.city_id  and e.institute_id=i.institute_id  and e.course_id=t.course_id and user_id=2

create table posts (
    post_id int primary key auto_increment,
    user_id int not null,
    creation_time date not null,
    comment_count int default 0,
    like_count int default 0,
    main_heading char(80),
    textarea varchar(5000),
    pic char(150),
    constraint posts_user_fk foreign key (user_id) references users(user_id)on delete cascade,
    media_type_id int not null default 0,
    constraint media_types_fk foreign key (media_type_id) references media_types(media_type_id)

);

alter table posts modify column textarea varchar(5000);
alter table posts modify column pic char(150);
alter table posts modify column like_count int not null default 0;

alter table posts modify column media_type_id int not null default 1,
add constraint fk_media_types foreign key(media_type_id) references media_types(media_type_id);

~~~~~~~~~~~~~~~~~~~~ create table media_types ~~~~~~~~~~~~~~~~~~
create table media_types (
    media_type_id int primary key auto_increment,
    type char(40) not null unique
);

alter table users drop index profile_pic_path;
show index from users;

*************************************************************Like************************************************
insert into likes(user_id,post_id) select ?,? where not exists (select 1 from likes where user_id=1 and post_id=1);

update posts p set like_count =(select count(*) from likes i where i.post_id=p.post_id);

delete from likes where user_id=1 and post_id=1;

create table likes (
    like_id int primary key auto_increment,
    user_id int not null,
    post_id int not null,
    constraint likes_user_fk foreign key (user_id) references users(user_id),
    constraint likes_post_fk foreign key (post_id) references posts(post_id)
);

select email from users inner join posts on users.user_id=posts.user_id where post_id=5;

alter table likes modify post_id int not null,
add constraint like_post_fk foreign key (user_id) references users(user_id) on delete cascade;

alter table likes modify user_id int not null,
add constraint like_user_fk foreign key (user_id) references users(user_id)on delete cascade;


*********************************************************Comment************************************************
create table comments (
    comment_id int primary key auto_increment,
    user_id int not null,
    post_id int not null,
    comment varchar(3000) not null,
    comment_time datetime not null,
    constraint comments_user_fk foreign key (user_id) references users(user_id)on delete cascade,
    constraint comments_post_fk foreign key (post_id) references posts(post_id)on delete cascade
);

select email,profile_pic_path,username,comment,comment_time from users inner join comments on users.user_id=comments.user_id where post_id=?;

create table user_types(
      user_type_id int auto_increment primary key,
      name char(25) not null  
);

insert into user_types (name) values ('General User'),('Admin User');

alter table users add column user_type_id int not null default 1,
add constraint fk_users_utypes foreign key (user_type_id) references user_types (user_type_id);

alter table comments modify post_id int not null,
add constraint comment_post_fk foreign key (post_id) references posts(post_id)on delete cascade;

alter table comments modify user_id int not null,
add constraint comment_user_fk foreign key (user_id) references users(user_id)on delete cascade;

alter table likes modify post_id int not null,
add constraint like_post_fk foreign key (post_id) references posts(post_id)on delete cascade;


select * from INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
where DELETE_RULE ='CASCADE';

create table followers(
   id int primary key auto_increment,
   following_id int not null,
   follower_id int not null,
   constraint follower_user_fk foreign key (following_id) references users(user_id)on delete cascade,
   constraint followers_user_fk foreign key (follower_id) references users(user_id)on delete cascade
);

create table report_posts(
    report_id int primary key auto_increment,
    post_id int not null,
    user_id int not null,
    content varchar(50),
    textarea varchar(1200),
    constraint report_users_fk foreign key (user_id) references users(user_id)on delete cascade,
   constraint report_post_fk foreign key (post_id) references posts(post_id)on delete cascade

);

create table report_comments(
    report_id int primary key auto_increment,
    comment_id int not null,
    user_id int not null,
    content varchar(50),
    textarea varchar(1200),
    constraint report_user_fk foreign key (user_id) references users(user_id)on delete cascade,
   constraint report_comment_fk foreign key (comment_id) references comments(comment_id)on delete cascade

);







/*************************************************************************************************************************\
                        <div class="mb-4">
                            <label for="profession" class="form-label fs-5 fw-semibold text-primary">Profession<sup
                                    class="text-danger">*</sup></label>
                            <textarea name="profession" id="about rows=" 7" col="80" class="form-control"
                                placeholder="profession..." required>${user.profession}</textarea>
                        </div>



                            <c:choose>
                                <c:when test="${user.gender == 'f'}">
                                    <input type="radio" name="gender" checked class="form-check-input" value="f">
                                    <label for="gender">Female</label><br>
                                </c:when>
                                <c:otherwise>
                                    <input type="radio" name="gender" class="form-check-input" value="f">
                                    <label for="gender">Female</label><br>
                                </c:otherwise>
                            </c:choose>
                            <c:choose>
                                <c:when test="${user.gender == 'm'}">
                                    <input type="radio" name="gender" checked class="form-check-input" value="m">
                                    <label for="gender">Male</label><br>
                                </c:when>
                                <c:otherwise>
                                    <input type="radio" name="gender" class="form-check-input" value="m">
                                    <label for="gender">Male</label><br>
                                </c:otherwise>
                            </c:choose>
                            <c:choose>

                             <script>

            btn.addEventListener('click', () => {

                if (btn.value == 'Save Details')
                    document.getElementById("myform").action = '';
                else
                    document.getElementById("myform").action = 'personal_details_from.do';
            });

        </script>
/***************************************************************************************************************************\        